# version: '3.8'

# services:
#   etcd:
#     container_name: milvus-etcd
#     image: quay.io/coreos/etcd:v3.5.5
#     environment:
#       - ETCD_AUTO_COMPACTION_MODE=revision
#       - ETCD_AUTO_COMPACTION_RETENTION=1000
#       - ETCD_QUOTA_BACKEND_BYTES=4294967296
#       - ETCD_SNAPSHOT_COUNT=50000
#     volumes:
#       - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
#     command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
#     networks:
#       - test-net
#       - default 
#     healthcheck:
#       test: ["CMD", "etcdctl", "endpoint", "health"]
#       interval: 30s
#       timeout: 20s
#       retries: 3

#   minio:
#     container_name: milvus-minio
#     image: minio/minio:RELEASE.2023-03-20T20-16-18Z
#     environment:
#       MINIO_ACCESS_KEY: minioadmin
#       MINIO_SECRET_KEY: minioadmin
#     ports:
#       - "9001:9001"
#       - "9000:9000"
#     volumes:
#       - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
#     command: minio server /minio_data --console-address ":9001"
#     networks:
#       - test-net
#       - default 
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#       interval: 30s
#       timeout: 20s
#       retries: 3
    

#   standalone:
#     container_name: milvus-standalone
#     image: milvusdb/milvus:v2.5.0-beta
#     command: ["milvus", "run", "standalone"]
#     security_opt:
#       - seccomp:unconfined
#     environment:
#       ETCD_ENDPOINTS: etcd:2379
#       MINIO_ADDRESS: minio:9000
#     volumes:
#       - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
#       interval: 30s
#       start_period: 90s
#       timeout: 20s
#       retries: 3
#     ports:
#       - "19530:19530"
#       - "9091:9091"
#     networks:
#       - test-net
#       - default 
#     depends_on:
#       - "etcd"
#       - "minio"

#   ollama:
#     # build:
#     #   context: ./ollama
#     #   dockerfile: Dockerfile
#     image: ollama:latest
#     ports:
#       - 11435:11434
#     volumes:
#       - chatbot-vol:/ollama
#     networks:
#       - test-net
#     entrypoint: [ "/usr/bin/bash", "pull-llama3.sh" ]

#   web:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     image: docker_test-web:latest
#     ports:
#       - 8000:8000
#     volumes:
#       - ./backend:/home
#     networks:
#       - test-net
#       - default    # Add this line to connect to the default network where Milvus is running

  

# networks:
#   test-net:
#     driver: bridge

# volumes:
#   chatbot-vol:
#     driver: local



version: '3.8'

services:
#   etcd:
#     container_name: milvus-etcd
#     image: quay.io/coreos/etcd:v3.5.5
#     network_mode: host
#     environment:
#       - ETCD_AUTO_COMPACTION_MODE=revision
#       - ETCD_AUTO_COMPACTION_RETENTION=1000
#       - ETCD_QUOTA_BACKEND_BYTES=4294967296
#       - ETCD_SNAPSHOT_COUNT=50000
#     volumes:
#       - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
#     command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
#     healthcheck:
#       test: ["CMD", "etcdctl", "endpoint", "health"]
#       interval: 30s
#       timeout: 20s
#       retries: 3

#   minio:
#     container_name: milvus-minio
#     image: minio/minio:RELEASE.2023-03-20T20-16-18Z
#     network_mode: host
#     environment:
#       MINIO_ACCESS_KEY: minioadmin
#       MINIO_SECRET_KEY: minioadmin
#     ports:
#       - "9001:9001"
#       - "9000:9000"
#     volumes:
#       - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
#     command: minio server /minio_data --console-address ":9001"
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#       interval: 30s
#       timeout: 20s
#       retries: 3

#   standalone:
#     container_name: milvus-standalone
#     image: milvusdb/milvus:v2.5.0-beta
#     command: ["milvus", "run", "standalone"]
#     network_mode: host
#     security_opt:
#       - seccomp:unconfined
#     environment:
#       ETCD_ENDPOINTS: localhost:2379
#       MINIO_ADDRESS: localhost:9000
#     volumes:
#       - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
#       interval: 30s
#       start_period: 90s
#       timeout: 20s
#       retries: 3
#     ports:
#       - "19530:19530"
#       - "9091:9091"
#     depends_on:
#       etcd:
#         condition: service_healthy
#       minio:
#         condition: service_healthy

  # ollama:
  #   image: ollama:latest
  #   ports:
  #     - 11435:11434
  #   volumes:
  #     - chatbot-vol:/ollama
  #   networks:
  #     - test-net
  #   entrypoint: [ "/usr/bin/bash", "pull-llama3.sh" ]
  #   restart: unless-stopped


  web:
    container_name: model-api
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: docker_test-web:latest
    ports:
      - 8000:8000
    volumes:
      - ./backend:/home
    network_mode: host
    restart: unless-stopped
    # depends_on:
    #   standalone:
    #     condition: service_healthy
    #   etcd:
    #     condition: service_healthy
    #   minio:
    #     condition: service_healthy


  # web:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   image: docker_test-web:latest
  #   ports:
  #     - 8000:8000
  #   volumes:
  #     - ./backend:/home
  #   networks:
  #     - test-net
  #     - default
  #   depends_on:
  #     - standalone
  #     - ollama
  #   restart: unless-stopped

# networks:
#   test-net:
#     driver: bridge

# volumes:
#   chatbot-vol:
#     driver: local